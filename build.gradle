plugins {
	id 'fabric-loom' version "1.2-SNAPSHOT"
	id 'legacy-looming' version "1.2-SNAPSHOT" // Version must be the same as fabric-loom's
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "$project.mod_version-$project.target_version"
group = project.maven_group

loom {
	setIntermediaryUrl('https://repo.legacyfabric.net/repository/legacyfabric/net/legacyfabric/intermediary/%1$s/intermediary-%1$s-v2.jar')
	accessWidenerPath = file("src/main/resources/optifabric.accesswidener")
}

repositories {
	maven {
		name = 'Jitpack'
		url = 'https://jitpack.io'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:$project.minecraft_version"
	mappings "net.legacyfabric:yarn:$project.yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$project.loader_version"

	include(modImplementation("com.github.tildejustin:Fabric-ASM:$project.fabric_asm_version"))

	//Used to handle the zip processing
	include(implementation("org.zeroturnaround:zt-zip:$project.zt_zip_version"))

	//Required for zt-zip, kinda annoying
	include "org.slf4j:slf4j-simple:$project.slf4j_version"
	include "org.slf4j:slf4j-api:$project.slf4j_version"

	include(implementation("org.apache.commons:commons-lang3:$project.commons_lang3_version"))

	include(implementation("commons-io:commons-io:$project.commons_io_version"))

	include(implementation("commons-codec:commons-codec:$project.commons_codec_version"))
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
